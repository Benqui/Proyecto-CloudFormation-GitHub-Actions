name: Deploy Modular CloudFormation Stack

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - '.gitignore'
      - 'pictures/**'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Upload nested templates to S3
        run: |
          BUCKET_NAME=benqui-gh-actions-cf-148761664911
          TEMPLATE_PATH=templates
          aws s3 cp $TEMPLATE_PATH/vpc.yaml s3://$BUCKET_NAME/vpc.yaml
          aws s3 cp $TEMPLATE_PATH/lambda.yaml s3://$BUCKET_NAME/lambda.yaml
          aws s3 cp $TEMPLATE_PATH/rds.yaml s3://$BUCKET_NAME/rds.yaml

      - name: Check if RDS instance exists and set CreateDB parameter
        id: check_rds
        run: |
          if aws rds describe-db-instances --db-instance-identifier modular-db --region us-east-1 > /dev/null 2>&1; then
            echo "DB exists, skipping creation"
            echo "create_db=false" >> $GITHUB_OUTPUT
          else
            echo "DB does not exist, will create"
            echo "create_db=true" >> $GITHUB_OUTPUT
          fi

      - name: Deploy modular CloudFormation stack
        run: |
          aws cloudformation deploy \
            --template-file templates/root.yaml \
            --stack-name changes-rds-conditionals-pt6 \
            --capabilities CAPABILITY_NAMED_IAM \
            --parameter-overrides BucketName=benqui-gh-actions-cf-148761664911 CreateDB=${{ steps.check_rds.outputs.create_db }}
